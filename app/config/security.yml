security:
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#    Cupon\UsuarioBundle\Entity\Usuario: { algorithm: sha512, iterations: 10 }    
#    Cupon\UsuarioBundle\Entity\Usuario: { algorithm: sha512, iterations: 5000, encode_as_base64: true }
      miMoto\EntidadesBundle\Entity\Usuario: { algorithm: plaintext}




#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
      usuarios:
        entity: { class: miMoto\EntidadesBundle\Entity\Usuario, property: correo }
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        frontend:
          pattern: ^/
          anonymous: ~
          form_login: 
#            login_path: portada_producto_inicio
            login_path: inicio
            check_path: usuario_login_check
            default_target_path: usuario_hello
            #default_target_path: usuario_producto_ver
            always_use_default_target_path: true

          logout:
              path: usuario_logout
              target: /usuario/cerrarSesion
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
      
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false

#        login:
#            pattern:  ^/demo/secured/login$
#            security: false

#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/usuario/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/usuario/registro, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/usuario/cerrarSesion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/usuario/*, roles: ROLE_USUARIO }
